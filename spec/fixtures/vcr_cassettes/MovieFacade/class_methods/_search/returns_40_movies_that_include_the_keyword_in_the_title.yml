---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<tmdb_api_key>&page=1&query=cat
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 07 Jul 2022 22:48:26 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Server:
      - BunnyCDN-NY-885
      Cdn-Pullzone:
      - '775334'
      Cdn-Uid:
      - 29af4e0e-bcbd-4fcb-8635-74ddc38a1ebf
      Cdn-Requestcountrycode:
      - US
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Cdn-Proxyver:
      - '1.02'
      Cdn-Requestpullsuccess:
      - 'True'
      Cdn-Requestpullcode:
      - '200'
      Cdn-Cachedat:
      - 07/07/2022 22:11:11
      Cdn-Edgestorageid:
      - '885'
      Cdn-Status:
      - '200'
      Cdn-Requestid:
      - a2e24534dda91a81daab5c0ab0146bc1
      Cdn-Cache:
      - REVALIDATED
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 07 Jul 2022 22:48:26 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<tmdb_api_key>&page=2&query=cat
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 07 Jul 2022 22:48:26 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 833189e24f3e31812a47b595ff310a14.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - EWR52-C2
      X-Amz-Cf-Id:
      - ww3QUyGxhHk3H7qOTM0-q3g1cpc_4y6j3pb55MAnHLapRw-ylgsjTQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 07 Jul 2022 22:48:26 GMT
recorded_with: VCR 6.1.0
