---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<tmdb_api_key>&page=1&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 10 Jul 2022 02:57:50 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Server:
      - BunnyCDN-NY-885
      Cdn-Pullzone:
      - '775334'
      Cdn-Uid:
      - 29af4e0e-bcbd-4fcb-8635-74ddc38a1ebf
      Cdn-Requestcountrycode:
      - US
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Cdn-Proxyver:
      - '1.02'
      Cdn-Requestpullsuccess:
      - 'True'
      Cdn-Requestpullcode:
      - '200'
      Cdn-Cachedat:
      - 07/10/2022 02:57:50
      Cdn-Edgestorageid:
      - '885'
      Cdn-Status:
      - '200'
      Cdn-Requestid:
      - fd8fb3c74174a1613da772b98d1937f1
      Cdn-Cache:
      - EXPIRED
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 10 Jul 2022 02:57:50 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<tmdb_api_key>&page=2&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 10 Jul 2022 02:57:50 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Server:
      - BunnyCDN-NY-885
      Cdn-Pullzone:
      - '775334'
      Cdn-Uid:
      - 29af4e0e-bcbd-4fcb-8635-74ddc38a1ebf
      Cdn-Requestcountrycode:
      - US
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Cdn-Proxyver:
      - '1.02'
      Cdn-Requestpullsuccess:
      - 'True'
      Cdn-Requestpullcode:
      - '200'
      Cdn-Cachedat:
      - 07/10/2022 02:57:50
      Cdn-Edgestorageid:
      - '885'
      Cdn-Status:
      - '200'
      Cdn-Requestid:
      - 522b31d75532eced6eccf881d7709170
      Cdn-Cache:
      - EXPIRED
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 10 Jul 2022 02:57:50 GMT
recorded_with: VCR 6.1.0
