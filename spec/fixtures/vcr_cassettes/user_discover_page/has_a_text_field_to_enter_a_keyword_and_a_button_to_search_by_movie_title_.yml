---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<tmdb_api_key>&page=1&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 08 Jul 2022 21:16:11 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 983a291908f1fa8f6ee8dc2761eb6b2c.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - EWR52-C2
      X-Amz-Cf-Id:
      - DiZeYkyyIKGOQm0JSik95xQ3bd4E4PJ4aniues4nl10nREwcXsrUPw==
      Age:
      - '83'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 08 Jul 2022 21:17:34 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<tmdb_api_key>&page=2&query=titanic
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 08 Jul 2022 21:16:11 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 c855cfdfac580e3b58f1c68c8d67dcf6.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - EWR52-C2
      X-Amz-Cf-Id:
      - 19Mo1Dhou5n6d2FycntNf_C2ZbxL49iZRRmE9WitqWZLrgTgLYK7cw==
      Age:
      - '83'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 08 Jul 2022 21:17:34 GMT
recorded_with: VCR 6.1.0
